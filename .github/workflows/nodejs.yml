name: webpack-cli

on:
  push:
    branches:
      - main
      - next
  pull_request:
    branches:
      - main
      - next

permissions:
  contents: read

jobs:
  lint:
    name: Lint - ${{ matrix.os }} - Node v${{ matrix.node-version }}

    runs-on: ${{ matrix.os }}

    concurrency:
      group: lint-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]
        webpack-version: [latest]

    steps:
      - uses: actions/checkout@v4

      - name: Using Node v${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Lint
        run: yarn lint

  build:
    name: Tests and Coverage - ${{ matrix.os }} - Node v${{ matrix.node-version }}, Webpack ${{ matrix.webpack-version }}, DevServer ${{ matrix.dev-server-version }} (${{ matrix.shard }})

    runs-on: ${{ matrix.os }}

    concurrency:
      group: build-${{ matrix.os }}-v${{ matrix.node-version }}-${{ matrix.webpack-version }}-${{ matrix.dev-server-version }}-${{ matrix.shard }}-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x, 22.x, 24.x]
        shard: ["1/4", "2/4", "3/4", "4/4"]
        webpack-version: [latest]
        dev-server-version: [latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Using Node v${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: yarn --frozen-lockfile --ignore-engines --ignore-scripts

      - name: Prepare environment for tests
        run: yarn build:ci

      - name: Run tests and generate coverage
        run: yarn test:coverage --ci --shard=${{ matrix.shard }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  smoketests:
    name: Smoketests - ${{ matrix.os }} - Node v${{ matrix.node-version }}
    runs-on: ubuntu-latest
    concurrency:
      group: smoketests-${{ github.ref }}
      cancel-in-progress: true
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Using Node v${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn --frozen-lockfile --ignore-engines

      - name: Prepare environment for tests
        run: yarn build:ci

      - name: Run smoketests
        run: yarn test:smoketests

  commitlint:
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    concurrency:
      group: commitlint-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "yarn"

      - run: 
             "yarn -- [![webpack-cli](https://github.com/webpack/webpack-cli/actions/workflows/nodejs.yml/badge.svg?branch=main)](https://github.com/webpack/webpack-cli/actions/workflows/nodejs.yml)"

      - name: 
             "Validate PR commits with commitlint"
        if:  
            'github.event_name == "pull_request"
        run: 
            npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
        env:
          NODE_PATH: 
          
          name: mapbox_maps_flutter
description: Interactive, thoroughly customizable maps powered by Mapbox Maps mobile SDKs.
version: 2.11.0
homepage: https://github.com/mapbox/mapbox-maps-flutter

environment:
  sdk: ">=3.4.4 <4.0.0"
  flutter: ">=3.22.3"

dependencies:
  flutter:
    sdk: flutter
  flutter_plugin_android_lifecycle: ^2.0.5
  turf: ^0.0.8
  typed_data: ^1.3.0
  meta: ^1.9.1

dev_dependencies:
  integration_test:
    sdk: flutter
  flutter_test:
    sdk: flutter
  test: ^1.19.0
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  plugin:
    platforms:
      android:
        package: com.mapbox.maps.mapbox_maps
        pluginClass: MapboxMapsPlugin
      ios:
        pluginClass: MapboxMapsPlugin
